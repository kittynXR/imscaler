name: Build VCC Listing

on:
  push:
    branches: [ main ]
    paths:
      - 'source.json'
      - 'VRChatImmersiveScaler/package.json'
      - '.github/workflows/release.yml'
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-listing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build VPM Listing
        run: |
          # Create index.json from source.json
          node -e "
          const fs = require('fs');
          const path = require('path');
          
          // Read source.json
          const source = JSON.parse(fs.readFileSync('source.json', 'utf8'));
          
          // Read package.json
          const packageJson = JSON.parse(fs.readFileSync('VRChatImmersiveScaler/package.json', 'utf8'));
          
          // Create the listing structure
          const listing = {
            name: source.name,
            id: source.id,
            url: source.url,
            author: source.author,
            description: source.description,
            infoLink: source.infoLink,
            bannerUrl: source.bannerUrl,
            packages: {
              [packageJson.name]: {
                versions: {
                  [packageJson.version]: {
                    ...packageJson,
                    url: \`https://github.com/\${process.env.GITHUB_REPOSITORY}/releases/download/v\${packageJson.version}/\${packageJson.name}-\${packageJson.version}.zip\`
                  }
                }
              }
            }
          };
          
          // Write index.json
          fs.writeFileSync('index.json', JSON.stringify(listing, null, 2));
          console.log('Generated index.json');
          "

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  build-package:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Unity Package
        id: create_package
        run: |
          # Create package directory structure
          mkdir -p package
          cp -r VRChatImmersiveScaler/* package/
          
          # Read version and name from package.json
          VERSION=$(cat VRChatImmersiveScaler/package.json | grep '"version"' | head -1 | cut -d '"' -f 4)
          PACKAGE_NAME=$(cat VRChatImmersiveScaler/package.json | grep '"name"' | head -1 | cut -d '"' -f 4)
          
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
          echo "FILENAME=${PACKAGE_NAME}-${VERSION}.zip" >> $GITHUB_OUTPUT
          
          # Create zip file
          cd package
          zip -r "../${PACKAGE_NAME}-${VERSION}.zip" .
          cd ..
          
          echo "Created package: ${PACKAGE_NAME}-${VERSION}.zip"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.create_package.outputs.FILENAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}